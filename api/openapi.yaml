openapi: 3.0.3
info:
  title: Image Recognition Microservices App
  description: The app allows users to run inference on images for image detection.
  version: v1
servers:
- url: https://isa-singh.azurewebsites.net/
paths:
  /login:
    get:
      summary: Display the login page
      description: Returns the login page HTML.
      operationId: loginGET
      responses:
        "200":
          description: Successfully retrieved the login page.
      x-swagger-router-controller: Default
    post:
      summary: Authenticate user
      description: Authenticates the user with email and password.
      operationId: loginPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: Successfully authenticated.
        "401":
          description: Unauthorized.
      x-swagger-router-controller: Default
  /register:
    get:
      summary: Display the registration page
      description: Returns the registration page HTML.
      operationId: registerGET
      responses:
        "200":
          description: Successfully retrieved the registration page.
      x-swagger-router-controller: Default
    post:
      summary: Register a new user
      description: Allows a user to register with email and password.
      operationId: registerPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register_body'
        required: true
      responses:
        "200":
          description: Successfully registered.
        "401":
          description: Unauthorized.
      x-swagger-router-controller: Default
  /forgot-password:
    post:
      summary: Forgot password
      description: Allows a user to request a password reset using their email.
      operationId: forgot_passwordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forgotpassword_body'
        required: true
      responses:
        "200":
          description: Password reset email sent.
        "401":
          description: Unauthorized.
      x-swagger-router-controller: Default
  /protected:
    get:
      summary: Access protected page
      description: Returns the protected page if authenticated.
      operationId: protectedGET
      responses:
        "200":
          description: Successfully retrieved the protected page.
        "401":
          description: Unauthorized.
      security:
      - bearerAuth: []
      x-swagger-router-controller: Default
  /dashboard:
    get:
      summary: Dashboard page
      description: Returns the dashboard if authenticated.
      operationId: dashboardGET
      responses:
        "200":
          description: Successfully retrieved the dashboard page.
        "401":
          description: Unauthorized.
      security:
      - bearerAuth: []
      x-swagger-router-controller: Default
  /password-reset:
    get:
      summary: Password reset page
      description: Displays the password reset page.
      operationId: password_resetGET
      parameters:
      - name: token
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully reset password.
      x-swagger-router-controller: Default
  /forgot:
    get:
      summary: Forgot password page
      description: Displays the forgot password page.
      operationId: forgotGET
      responses:
        "200":
          description: Successfully retrieved the forgot password page.
      x-swagger-router-controller: Default
  /:
    get:
      summary: Homepage
      description: Displays the homepage.
      operationId: rootGET
      responses:
        "200":
          description: Successfully retrieved the homepage.
      x-swagger-router-controller: Default
  /message:
    get:
      summary: Message page
      description: Displays a page with a query-provided message.
      operationId: messageGET
      parameters:
      - name: message
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the message page.
      x-swagger-router-controller: Default
  /reset-password:
    post:
      summary: Reset password
      description: Resets the password using a JWT and new password.
      operationId: reset_passwordPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetpassword_body'
        required: true
      responses:
        "200":
          description: Successfully reset password.
        "401":
          description: Unauthorized.
      x-swagger-router-controller: Default
  /favicon.ico:
    get:
      summary: Favicon
      description: Returns the favicon.
      operationId: favicon_icoGET
      responses:
        "200":
          description: Successfully retrieved favicon.
      x-swagger-router-controller: Default
  /detect:
    post:
      summary: Run image detection
      description: Runs inference on an image for object detection.
      operationId: detectPOST
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/detect_body'
        required: true
      responses:
        "200":
          description: Successfully processed the image.
          content:
            image/png:
              schema:
                type: string
                format: binary
                x-content-type: image/png
        "401":
          description: Unauthorized.
      x-swagger-router-controller: Default
components:
  schemas:
    register_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    detect_body:
      type: object
      properties:
        image:
          type: string
          format: binary
        token:
          type: string
    resetpassword_body:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
    login_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    forgotpassword_body:
      type: object
      properties:
        email:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
